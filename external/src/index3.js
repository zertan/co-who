// WARNING: DO NOT EDIT!
// THIS FILE WAS GENERATED BY SHADOW-CLJS AND WILL BE OVERWRITTEN!

var ALL = {};

async function loadLibs() {
  ALL["did-session"] = await import("did-session");
  ALL["blockies-ts"] = await import("blockies-ts").then(function (result) { return result; });
  ALL["mr-who/mutations"] = await import("mr-who/mutations").then(function (result) { return result; });
  ALL["viem/chains"] = await import("viem/chains").then(function (result) { return result; });
  ALL["viem/accounts"] = await import("viem/accounts").then(function (result) { return result; });
  ALL["navigo"] = await import("navigo").then(function (result) { return result; });
  ALL["@didtools/pkh-ethereum"] = await import("@didtools/pkh-ethereum").then(function (result) { return result; });
  ALL["mr-who/dom"] = await import("mr-who/dom").then(function (result) { return result; });
  ALL["flowbite"] = await import("flowbite").then(function (result) { return result; });
  ALL["flowbite-datepicker"] = await import("flowbite-datepicker").then(function (result) { return result; });
  ALL["@composedb/client"] = await import("@composedb/client").then(function (result) { return result; });
  ALL["mr-who/render"] = await import("mr-who/render").then(function (result) { return result; });
  ALL["co-blue/icons"] = await import("co-blue/icons").then(function (result) { return result; });
  ALL["mr-who/utils"] = await import("mr-who/utils").then(function (result) { return result; });
  ALL["viem"] = await import("viem").then(function (result) { return result; });
  return ALL;
}

loadLibs().then(function (result) {
  var script2 = document.createElement('script');
  script2.src = "src/main.js"
  document.head.appendChild(script2);
  console.log("hi");
});

shadow$bridge = function shadow$bridge(name) {
  var ret = ALL[name];

  if (ret === undefined) {
     throw new Error("Dependency: " + name + " not provided by external JS. Do you maybe need a recompile?");
  }

  return ret;
};

shadow$bridge.ALL = ALL;
